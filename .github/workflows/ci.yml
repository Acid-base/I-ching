name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f divination/requirements-dev.txt ]; then pip install -r divination/requirements-dev.txt; fi
        pip install -r divination/requirements.txt
    - name: Lint with ruff
      run: |
        pip install ruff
        cd divination
        ruff check .
    - name: Test with pytest
      run: |
        cd divination
        pytest --cov=. --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./divination/coverage.xml
        fail_ci_if_error: false

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'packages/frontend/package.json'
    - name: Install dependencies
      run: |
        cd packages/frontend
        npm ci
    - name: Lint
      run: |
        cd packages/frontend
        npm run lint
    - name: Run tests
      run: |
        cd packages/frontend
        npm test

  build-docker:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build -t i-ching-api .
    - name: Test Docker image
      run: |
        docker run -d --name test-i-ching -p 8000:8000 i-ching-api
        sleep 5
        curl --fail http://localhost:8000/health || exit 1
