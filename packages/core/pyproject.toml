[tool.poetry]
name = "iching-core"
version = "0.1.0"
description = "Core I Ching divination logic"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
homepage = "https://github.com/yourusername/iching-core" # Replace with your repo URL
repository = "https://github.com/yourusername/iching-core" # Replace with your repo URL
documentation = "https://your-project-docs.readthedocs.io/en/latest/" # Replace with your docs URL

[tool.poetry.dependencies]
python = "^3.9"
numpy = "^1.26.0"
pydantic = "^2.10.3"
typing-extensions = "^4.12.2"
annotated-types = "^0.6.0"
fastapi = {version = "^0.115.6", extras = ["standard"]}
uvicorn = "^0.34.0"
python-dotenv = "^1.0.1"
google-generativeai = "^0.8.3"
httpx = "^0.27.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
ruff = "^0.1.11"
pre-commit = "^3.6.0"
mypy = "^1.5.0"
rich = "^13.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py39"
# Enable specific rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "D",  # pydocstyle
    "UP", # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__
]
# Exclude files or directories
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
]
# Enable fix support
fix = true
fixable = ["ALL"]
# Enable auto-fix for unused variables
[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

# Allow unused variables in test files
[tool.ruff.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-first-party = ["iching_core"]
known-third-party = ["fastapi", "pydantic", "numpy"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true